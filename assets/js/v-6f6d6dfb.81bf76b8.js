"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[917],{5011:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6f6d6dfb",path:"/front-end/javascript/32_event-bus.html",title:"事件總線",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"基本實現",slug:"基本實現",children:[]}],filePathRelative:"front-end/javascript/32_event-bus.md",git:{updatedTime:1665400196e3,contributors:[{name:"louis61619",email:"louis61619@gmail.com",commits:1}]}}},1852:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="事件總線" tabindex="-1"><a class="header-anchor" href="#事件總線" aria-hidden="true">#</a> 事件總線</h1><p>自訂義事件總線屬於一種觀察者模式，其中包含三個角色：</p><ul><li>發布者（Publisher）：發出事件（Event）</li><li>訂閱者（Subscriber）：訂閱事件（Event），並且進行響應（Handler）</li><li>事件總線（EventBus）：作為中繼站。</li></ul><h2 id="基本實現" tabindex="-1"><a class="header-anchor" href="#基本實現" aria-hidden="true">#</a> 基本實現</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>eventBus <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> eventCallback<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> handlers <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventBus<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>handlers<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>eventBus<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span> <span class="token operator">=</span> handlers\n    <span class="token punctuation">}</span>\n    handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      eventCallback<span class="token punctuation">,</span>\n      thisArg\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> eventCallback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> handlers <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventBus<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>handlers<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>eventBus<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span> <span class="token operator">=</span> handlers<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>\n        <span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> handler<span class="token punctuation">.</span>eventCallback <span class="token operator">!==</span> eventCallback\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> <span class="token operator">...</span>payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> handlers <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventBus<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>handlers<span class="token punctuation">)</span> <span class="token keyword">return</span>\n    handlers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      handler<span class="token punctuation">.</span><span class="token function">eventCallback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>handler<span class="token punctuation">.</span>thisArg<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>',5),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])}}]);